<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>liunx命令</title>
    <link href="/2023/10/08/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/10/08/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="liunx命令"><a href="#liunx命令" class="headerlink" title="liunx命令"></a>liunx命令</h1><h2 id="1-文件结构"><a href="#1-文件结构" class="headerlink" title="1.文件结构"></a>1.文件结构</h2><table><thead><tr><th>文件</th><th align="left">描述</th></tr></thead><tbody><tr><td>&#x2F;bin</td><td align="left">二进制文件</td></tr><tr><td>&#x2F;boot</td><td align="left">系统启动分区</td></tr><tr><td>&#x2F;dev</td><td align="left">设备文件</td></tr><tr><td>&#x2F;etc</td><td align="left">大多数配置文件</td></tr><tr><td>&#x2F;home</td><td align="left">普通用户的家目录</td></tr><tr><td>&#x2F;lib</td><td align="left">32位函数库</td></tr><tr><td>&#x2F;lib64</td><td align="left">64位库</td></tr><tr><td>&#x2F;media</td><td align="left">手动临时挂载点</td></tr><tr><td>&#x2F;mnt</td><td align="left">手动临时挂载点</td></tr><tr><td>&#x2F;opt</td><td align="left">第三方软件安装位置</td></tr><tr><td>&#x2F;proc</td><td align="left">进程信息及硬件信息</td></tr><tr><td>&#x2F;sbin</td><td align="left">系统管理命令</td></tr><tr><td>&#x2F;srv</td><td align="left">数据</td></tr><tr><td>&#x2F;var</td><td align="left">数据</td></tr><tr><td>&#x2F;sys</td><td align="left">内核相关信息</td></tr><tr><td>&#x2F;tmp</td><td align="left">临时文件</td></tr><tr><td>&#x2F;usr</td><td align="left">用户相关设定</td></tr></tbody></table><h2 id="2-命令行含义"><a href="#2-命令行含义" class="headerlink" title="2.命令行含义"></a>2.命令行含义</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">示例：root@app00:~# <br>root    //用户名，root为超级用户<br>@       //分隔符<br>app00   //主机名称<br>~       //当前所在目录，默认用户目录为~，会随着目录切换而变化，例如：（root@app00:/bin# ，当前位置在bin目录下）<br><span class="hljs-meta prompt_"># </span><span class="language-bash">     //表示当前用户是超级用户，普通用户为$，例如：（<span class="hljs-string">&quot;yao@app00:/root$&quot;</span> ，表示使用用户<span class="hljs-string">&quot;yao&quot;</span>访问/root文件夹）</span><br></code></pre></td></tr></table></figure><h2 id="3-目录操作"><a href="#3-目录操作" class="headerlink" title="3.目录操作"></a>3.目录操作</h2><h3 id="3-1-切换目录（cd）"><a href="#3-1-切换目录（cd）" class="headerlink" title="3.1 切换目录（cd）"></a>3.1 切换目录（cd）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /                 //切换到根目录<br>cd /bin              //切换到根目录下的bin目录<br>cd ../               //切换到上一级目录 或者使用命令：cd ..<br>cd ~                 //切换到home目录<br>cd -                 //切换到上次访问的目录<br>cd xx(文件夹名)       //切换到本目录下的名为xx的文件目录，如果目录不存在报错<br>cd /xxx/xx/x         //可以输入完整的路径，直接切换到目标目录，输入过程中可以使用tab键快速补全<br></code></pre></td></tr></table></figure><h3 id="3-2-查看目录（ls）"><a href="#3-2-查看目录（ls）" class="headerlink" title="3.2 查看目录（ls）"></a>3.2 查看目录（ls）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls                   //查看当前目录下的所有目录和文件<br>ls -a                //查看当前目录下的所有目录和文件（包括隐藏的文件）<br>ls -l                //列表查看当前目录下的所有目录和文件（列表查看，显示更多信息），与命令&quot;ll&quot;效果一样<br>ls /bin              //查看指定目录下的所有目录和文件 <br></code></pre></td></tr></table></figure><h3 id="3-3-创建目录（mkdir）"><a href="#3-3-创建目录（mkdir）" class="headerlink" title="3.3 创建目录（mkdir）"></a>3.3 创建目录（mkdir）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir tools          //在当前目录下创建一个名为tools的目录<br>mkdir /bin/tools     //在指定目录下创建一个名为tools的目录<br></code></pre></td></tr></table></figure><h3 id="3-4-修改目录（mv"><a href="#3-4-修改目录（mv" class="headerlink" title="3.4  修改目录（mv)"></a>3.4  修改目录（mv)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv 当前目录名 新目录名        //修改目录名，同样适用与文件操作<br>mv /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录剪切到 /opt目录下面<br>mv -r /usr/tmp/tool /opt    //递归剪切目录中所有文件和文件夹<br></code></pre></td></tr></table></figure><h3 id="3-5-删除目录与文件（rm）"><a href="#3-5-删除目录与文件（rm）" class="headerlink" title="3.5 删除目录与文件（rm）"></a>3.5 删除目录与文件（rm）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm 文件名              //删除当前目录下的文件<br>rm -f 文件名           //删除当前目录的的文件（不询问）<br>rm -r 文件夹名         //递归删除当前目录下此名的目录<br>rm -rf 文件夹名        //递归删除当前目录下此名的目录（不询问）<br>rm -rf *              //将当前目录下的所有目录和文件全部删除<br>rm -rf /*             //将根目录下的所有文件全部删除【慎用！相当于格式化系统】<br></code></pre></td></tr></table></figure><h3 id="3-6-拷贝目录（cp）"><a href="#3-6-拷贝目录（cp）" class="headerlink" title="3.6 拷贝目录（cp）"></a>3.6 拷贝目录（cp）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录复制到 /opt目录下面<br>cp -r /usr/tmp/tool /opt    //递归剪复制目录中所有文件和文件夹<br></code></pre></td></tr></table></figure><h3 id="3-7-搜索目录（find）"><a href="#3-7-搜索目录（find）" class="headerlink" title="3.7 搜索目录（find）"></a>3.7 搜索目录（find）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find /bin -name &#x27;a*&#x27;        //查找/bin目录下的所有以a开头的文件或者目录<br></code></pre></td></tr></table></figure><h2 id="4-文件操作"><a href="#4-文件操作" class="headerlink" title="4.文件操作"></a>4.文件操作</h2><h3 id="4-1-新增文件（touch）"><a href="#4-1-新增文件（touch）" class="headerlink" title="4.1 新增文件（touch）"></a>4.1 新增文件（touch）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch  a.txt         //在当前目录下创建名为a的txt文件（文件不存在），如果文件存在，将文件时间属性修改为当前系统时间<br>vim a.txt<br>cat &lt; daygeek4.txt<br></code></pre></td></tr></table></figure><h3 id="4-2-删除文件（rm）"><a href="#4-2-删除文件（rm）" class="headerlink" title="4.2 删除文件（rm）"></a>4.2 删除文件（rm）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm 文件名              //删除当前目录下的文件<br>rm -f 文件名           //删除当前目录的的文件（不询问）<br></code></pre></td></tr></table></figure><h3 id="4-3-编辑文件（vi、vim）"><a href="#4-3-编辑文件（vi、vim）" class="headerlink" title="4.3 编辑文件（vi、vim）"></a>4.3 编辑文件（vi、vim）</h3><h3 id="4-4-查看文件-tail、cat、less、more"><a href="#4-4-查看文件-tail、cat、less、more" class="headerlink" title="4.4 查看文件(tail、cat、less、more)"></a>4.4 查看文件(tail、cat、less、more)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat a.txt          //查看文件最后一屏内容<br>less a.txt         //PgUp向上翻页，PgDn向下翻页，&quot;q&quot;退出查看<br>more a.txt         //显示百分比，回车查看下一行，空格查看下一页，&quot;q&quot;退出查看<br>tail -100 a.txt    //查看文件的后100行，&quot;Ctrl+C&quot;退出查看<br></code></pre></td></tr></table></figure><h2 id="5-文件权限"><a href="#5-文件权限" class="headerlink" title="5.文件权限"></a>5.文件权限</h2><h3 id="5-1-权限说明"><a href="#5-1-权限说明" class="headerlink" title="5.1 权限说明"></a>5.1 权限说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">文件权限简介：&#x27;r&#x27; 代表可读（4），&#x27;w&#x27; 代表可写（2），&#x27;x&#x27; 代表执行权限（1），括号内代表&quot;8421法&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#文件权限信息示例：-rwxrw-r--</span></span><br>-第一位：&#x27;-&#x27;就代表是文件，&#x27;d&#x27;代表是文件夹<br>-第一组三位：拥有者的权限<br>-第二组三位：拥有者所在的组，组员的权限<br>-第三组三位：代表的是其他用户的权限<br></code></pre></td></tr></table></figure><h3 id="5-2-文件权限"><a href="#5-2-文件权限" class="headerlink" title="5.2 文件权限"></a>5.2 文件权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">普通授权    chmod +x a.txt    <br>8421法     chmod 777 a.txt     //1+2+4=7，&quot;7&quot;说明授予所有权限<br></code></pre></td></tr></table></figure><h2 id="6-打包与解压（tar）"><a href="#6-打包与解压（tar）" class="headerlink" title="6.打包与解压（tar）"></a>6.打包与解压（tar）</h2><h3 id="6-1-说明"><a href="#6-1-说明" class="headerlink" title="6.1 说明"></a>6.1 说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">.zip、.rar        //windows系统中压缩文件的扩展名<br>.tar              //Linux中打包文件的扩展名<br>.gz               //Linux中压缩文件的扩展名<br>.tar.gz           //Linux中打包并压缩文件的扩展名<br></code></pre></td></tr></table></figure><h3 id="6-2-打包文件"><a href="#6-2-打包文件" class="headerlink" title="6.2 打包文件"></a>6.2 打包文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zcvf 打包压缩后的文件名 要打包的文件<br>参数说明：z：调用gzip压缩命令进行压缩; c：打包文件; v：显示运行过程; f：指定文件名;<br>示例：<br>tar -zcvf a.tar file1 file2,...      //多个文件压缩打包<br></code></pre></td></tr></table></figure><h3 id="6-3-解压文件"><a href="#6-3-解压文件" class="headerlink" title="6.3 解压文件"></a>6.3 解压文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf a.tar                      //解包至当前目录<br>tar -zxvf a.tar -C /usr------        //指定解压的位置<br>unzip test.zip             //解压*.zip文件 <br>unzip -l test.zip          //查看*.zip文件的内容 <br></code></pre></td></tr></table></figure><h2 id="7-其他常用命令"><a href="#7-其他常用命令" class="headerlink" title="7. 其他常用命令"></a>7. 其他常用命令</h2><h3 id="7-1-find"><a href="#7-1-find" class="headerlink" title="7.1 find"></a>7.1 find</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">find . -name &quot;*.c&quot;     //将目前目录及其子目录下所有延伸档名是 c 的文件列出来<br>find . -type f         //将目前目录其其下子目录中所有一般文件列出<br>find . -ctime -20      //将目前目录及其子目录下所有最近 20 天内更新过的文件列出<br>find /var/log -type f -mtime +7 -ok rm &#123;&#125; \;     //查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问它们<br>find . -type f -perm 644 -exec ls -l &#123;&#125; \;       //查找前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件<br>find / -type f -size 0 -exec ls -l &#123;&#125; \;         //为了查找系统中所有文件长度为0的普通文件，并列出它们的完整路径<br></code></pre></td></tr></table></figure><h3 id="7-2-whereis"><a href="#7-2-whereis" class="headerlink" title="7.2 whereis"></a>7.2 whereis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">whereis ls             //将和ls文件相关的文件都查找出来<br></code></pre></td></tr></table></figure><h3 id="7-3-grep"><a href="#7-3-grep" class="headerlink" title="7.3 grep"></a>7.3 grep</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -i &quot;the&quot; demo_file              //在文件中查找字符串(不区分大小写)<br>grep -A 3 -i &quot;example&quot; demo_text     //输出成功匹配的行，以及该行之后的三行<br>grep -r &quot;ramesh&quot; *                   //在一个文件夹中递归查询包含指定字符串的文件<br></code></pre></td></tr></table></figure><h3 id="7-4-free"><a href="#7-4-free" class="headerlink" title="7.4 free"></a>7.4 free</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">说明：这个命令用于显示系统当前内存的使用情况，包括已用内存、可用内存和交换内存的情况 <br>free -g            //以G为单位输出内存的使用量，-g为GB，-m为MB，-k为KB，-b为字节 <br>free -t            //查看所有内存的汇总<br></code></pre></td></tr></table></figure><h3 id="7-5-top"><a href="#7-5-top" class="headerlink" title="7.5 top"></a>7.5 top</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">top               //显示当前系统中占用资源最多的一些进程, shift+m 按照内存大小查看<br></code></pre></td></tr></table></figure><h3 id="7-6-df"><a href="#7-6-df" class="headerlink" title="7.6 df"></a>7.6 df</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">说明：显示文件系统的磁盘使用情况<br>df -h            //一种易看的显示<br></code></pre></td></tr></table></figure><h3 id="7-7-ssh"><a href="#7-7-ssh" class="headerlink" title="7.7 ssh"></a>7.7 ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh user@remote -p port<br>//user 是你在远程机器上的用户名，如果不指定的话默认为当前用户<br>//remote 是远程机器的地址，可以是 IP，域名，或者是后面会提到的别名<br>//port 是 SSH Server 监听的端口，如果不指定的话就为默认值 22<br></code></pre></td></tr></table></figure><h3 id="7-8-scp"><a href="#7-8-scp" class="headerlink" title="7.8 scp"></a>7.8 scp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">scp /opt/data.txt  192.168.1.101:/opt/    //将本地opt目录下的data文件发送到192.168.1.101服务器的opt目录下<br></code></pre></td></tr></table></figure><h3 id="7-9-查看进程"><a href="#7-9-查看进程" class="headerlink" title="7.9 查看进程"></a>7.9 查看进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ef         //查看所有正在运行的进程<br></code></pre></td></tr></table></figure><h3 id="7-10-结束进程"><a href="#7-10-结束进程" class="headerlink" title="7.10 结束进程"></a>7.10 结束进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">kill pid       //杀死该pid的进程<br>kill -9 pid    //强制杀死该进程   <br></code></pre></td></tr></table></figure><h3 id="7-11-查看链接"><a href="#7-11-查看链接" class="headerlink" title="7.11 查看链接"></a>7.11 查看链接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ping IP        //查看与此IP地址的连接情况<br>netstat -an    //查看当前系统端口<br>netstat -an | grep 8080     //查看指定端口<br></code></pre></td></tr></table></figure><h3 id="7-12-查看网络"><a href="#7-12-查看网络" class="headerlink" title="7.12 查看网络"></a>7.12 查看网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig<br></code></pre></td></tr></table></figure><h2 id="8-实用命令"><a href="#8-实用命令" class="headerlink" title="8.实用命令"></a>8.实用命令</h2><p>看8080端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">netstat -nap|grep :8080   <br>//结果分别为：<br>协议名-网络接受队列-网络发送队列-本地地址-外部地址-链路状态-进程ip/应用程序<br></code></pre></td></tr></table></figure><p>强制杀死所有进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kill -9 `ps -aux|awk &#x27;&#123;print $2&#125;&#x27;`<br></code></pre></td></tr></table></figure><p>忽略大小写匹配a的行数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -o -i &#x27;a&#x27; aaa.txt|wc -l<br></code></pre></td></tr></table></figure><p>查找最后500行日志的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Tail -n 500 文件名<br></code></pre></td></tr></table></figure><p>grep擅长查找，sed擅长修改文件、awk擅长取列</p>]]></content>
    
    
    
    <tags>
      
      <tag>秋招-liunx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/08/hello-world/"/>
    <url>/2023/10/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
